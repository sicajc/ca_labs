==1302256== Memcheck, a memory error detector
==1302256== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1302256== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1302256== Command: ./cache_test
==1302256== Parent PID: 1015710
==1302256==
==1302256== valgrind: Unrecognised instruction at address 0x113dd3.
==1302256==    at 0x113DD3: L1_cache_access_L2_cache(memory_request) (l2_cache.cpp:33)
==1302256==    by 0x1173D1: cache_test_L2_cache_write_test_Test::TestBody() (test_l2_cache.cpp:141)
==1302256==    by 0x162014: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /root/user/ca_labs/lab2/cache_test)
==1302256==    by 0x15948E: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /root/user/ca_labs/lab2/cache_test)
==1302256==    by 0x12FB2F: testing::Test::Run() (in /root/user/ca_labs/lab2/cache_test)
==1302256==    by 0x130659: testing::TestInfo::Run() (in /root/user/ca_labs/lab2/cache_test)
==1302256==    by 0x131045: testing::TestSuite::Run() (in /root/user/ca_labs/lab2/cache_test)
==1302256==    by 0x142508: testing::internal::UnitTestImpl::RunAllTests() (in /root/user/ca_labs/lab2/cache_test)
==1302256==    by 0x1631C1: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /root/user/ca_labs/lab2/cache_test)
==1302256==    by 0x15A926: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /root/user/ca_labs/lab2/cache_test)
==1302256==    by 0x1409CF: testing::UnitTest::Run() (in /root/user/ca_labs/lab2/cache_test)
==1302256==    by 0x1186F1: RUN_ALL_TESTS() (gtest.h:2334)
==1302256== Your program just tried to execute an instruction that Valgrind
==1302256== did not recognise.  There are two possible reasons for this.
==1302256== 1. Your program has a bug and erroneously jumped to a non-code
==1302256==    location.  If you are running Memcheck and you just saw a
==1302256==    warning about a bad jump, it's probably your program's fault.
==1302256== 2. The instruction is legitimate but Valgrind doesn't handle it,
==1302256==    i.e. it's Valgrind's fault.  If you think this is the case or
==1302256==    you are not sure, please let us know and we'll try to fix it.
==1302256== Either way, Valgrind will now raise a SIGILL signal which will
==1302256== probably kill your program.
==1302256==
==1302256== Process terminating with default action of signal 4 (SIGILL)
==1302256==  Illegal opcode at address 0x113DD3
==1302256==    at 0x113DD3: L1_cache_access_L2_cache(memory_request) (l2_cache.cpp:33)
==1302256==    by 0x1173D1: cache_test_L2_cache_write_test_Test::TestBody() (test_l2_cache.cpp:141)
==1302256==    by 0x162014: void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /root/user/ca_labs/lab2/cache_test)
==1302256==    by 0x15948E: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /root/user/ca_labs/lab2/cache_test)
==1302256==    by 0x12FB2F: testing::Test::Run() (in /root/user/ca_labs/lab2/cache_test)
==1302256==    by 0x130659: testing::TestInfo::Run() (in /root/user/ca_labs/lab2/cache_test)
==1302256==    by 0x131045: testing::TestSuite::Run() (in /root/user/ca_labs/lab2/cache_test)
==1302256==    by 0x142508: testing::internal::UnitTestImpl::RunAllTests() (in /root/user/ca_labs/lab2/cache_test)
==1302256==    by 0x1631C1: bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /root/user/ca_labs/lab2/cache_test)
==1302256==    by 0x15A926: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /root/user/ca_labs/lab2/cache_test)
==1302256==    by 0x1409CF: testing::UnitTest::Run() (in /root/user/ca_labs/lab2/cache_test)
==1302256==    by 0x1186F1: RUN_ALL_TESTS() (gtest.h:2334)
==1302256==
==1302256== HEAP SUMMARY:
==1302256==     in use at exit: 77,778 bytes in 40 blocks
==1302256==   total heap usage: 205 allocs, 165 frees, 112,664 bytes allocated
==1302256==
==1302256== LEAK SUMMARY:
==1302256==    definitely lost: 0 bytes in 0 blocks
==1302256==    indirectly lost: 0 bytes in 0 blocks
==1302256==      possibly lost: 0 bytes in 0 blocks
==1302256==    still reachable: 77,778 bytes in 40 blocks
==1302256==         suppressed: 0 bytes in 0 blocks
==1302256== Reachable blocks (those to which a pointer was found) are not shown.
==1302256== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1302256==
==1302256== For lists of detected and suppressed errors, rerun with: -s
==1302256== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
